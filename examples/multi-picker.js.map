{"version":3,"sources":["webpack:///./examples/multi-picker.tsx","webpack:///./src/MultiPicker.tsx?f76b","webpack:///./src/MultiPickerMixin.tsx?23b7"],"names":[],"mappings":";;;;;;;;;;;;AAA+B;AAAA;AAAA;AAEO;AACO;AACnB;AACO;AAEjC,IAAU;AAEH,SAAQ;AACN;AACK;AAEC,mBAAO;AACP,mBACN;AAHD,SADQ;AAMD,mBAAO;AACP,mBAIZ;AANK;AANG;AAFT,CADW;AAiBN,SAAQ;AACN;AACK;AAEC,mBAAK;AACL,mBACN;AAHD,SADQ;AAMD,mBAAK;AACL,mBAKb;AAPM;AANG;AAFT;AAiBF,IAAU,qDAAoB;AAAC;AACd;AACP;AACC,mBAAE,CAAI,KAEf;AAHS;AAGR;AACO,gCAAM;AACL,gBAAI,IAAW,YAAS;AAC3B,aAAS;AAGf;AAHgB;AAGf;AACK;AACG;AACD;cAAO,OAAC,EAAQ,QAAmB,mBAAS,SAC9C;AAAA;AAAY;kBACI,eAAK,KAAM,MAAO,OAClB,eAAK,KAEnB;AAIR;;;AACC;CAxBe;AA0BV,kDAAO,OAAC,4DAAQ,aAAU,SAAe,eAAqB,oB;;;;;;;;;;;;;;;;;;;;;;;;;AClE5C;AACU;AACN;AAEoB;AAElD,IAAiB,4DAAoB;AAAwB;;AACrD,YAAE,CAAkB;AAEpB;;;AACJ,YAAW,QAAO,KACZ;YACK;YAAiB;YACjB;YAAiB;YAClB;YAAiB;YACX;YACV,OACI;YAAT;;AACD,YAAmB,gBAAO,KAAY;AACtC,YAAiB,uBAAe,IAAC,UAAI,KAAG;AAC/B;AACD;kBAAK,KAAI,IAAI,OAAM,GAAY,WACjC;AAAA,4EAAO,kIACK,WAAiB,iBAClB,UAAU,UACd,MAAM,MACI,gBAAgB,gBACrB,WAAiB,iBACb,eAAc,cAAI,IAClB,eAAK,MAAc,cAAU,YAC3C,MAAO,IAIf;;AAAG,SAfyB;AAgBrB;AACA;sFAAoB,mBAAW,WAAW,mDAAU,WACvD;AAGN;;AACC;CAnCsB;AAqCzB,yDAA2B,a;;;;;;;;AC3C3B;AACiB;AACP;AACK,uBAAoB;AACd,6BAAc;AAChB,oDACb,CAAC;;AACO,sBAEZ;AAPS;AAOR;AAEO;AACA,qBAAkC,KAAO;YAA/B;YAAiB;;AAC9B,YAAc,iBAAiB,cAAQ,QAAE;AACpC,mBACR;AAAM,eAAE;AACH,gBAAC,CAAU,UAAE;AACR,uBACR;AAAC;AACK,4BAAa,IAAE;AACnB,oBAAQ,KAAI,EAAM,MAAU;AACtB,uBAAG,MAAM,GAAG,MAAM,GAAG,GAC7B;AACF,aAJiB;AAKnB;AAAC;AAEY,0CAAE,GAAG;AAChB,YAAW,QAAO,KAAW,WAAU;AAClC,cAAG,KAAK;AACT,aAAM,MAAc,cAAM,OAChC;AACA;AA/Ba,G","file":"examples/multi-picker.js","sourcesContent":["/* tslint:disable:no-console */\n\nimport 'rmc-picker/assets/index.less';\nimport MultiPicker from '../src/MultiPicker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst cols = [\n  {\n    key: 'col1',\n    props: {\n      children: [\n        {\n          label: 'one',\n          value: '1',\n        },\n        {\n          label: 'two',\n          value: '2',\n        },\n      ],\n    },\n  },\n  {\n    key: 'col2',\n    props: {\n      children: [\n        {\n          label: '一',\n          value: '1',\n        },\n        {\n          label: '二',\n          value: '2',\n        },\n      ],\n    },\n  },\n];\n\nconst Test = React.createClass({\n  getInitialState() {\n    return {\n      value: ['1', '2'],\n    };\n  },\n  onChange(value) {\n    console.log('onChange', value);\n    this.setState({\n      value,\n    });\n  },\n  render() {\n    return (\n      <div style={{ border: '1px solid black', padding: 10 }}>\n        <MultiPicker\n          selectedValue={this.state.value}\n          onValueChange={this.onChange}\n        >\n          {cols}\n        </MultiPicker>\n      </div>\n    );\n  },\n});\n\nReactDOM.render(<Test />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/multi-picker.tsx","import React from 'react';\nimport classnames from 'classnames';\nimport Picker from './Picker';\nimport MultiPickerProps from './MultiPickerProps';\nimport MultiPickerMixin from './MultiPickerMixin';\n\nconst MultiPicker = React.createClass<MultiPickerProps, any>({\n  mixins: [MultiPickerMixin],\n\n  render() {\n    const props = this.props;\n    const {\n      prefixCls, pickerPrefixCls,\n      className, rootNativeProps,\n      disabled, pickerItemStyle,\n      indicatorStyle,\n      pure, children,\n    } = props;\n    const selectedValue = this.getValue();\n    const colElements = children.map((col, i) => {\n      return (\n        <div key={col.key || i} className={`${prefixCls}-item`}>\n          <Picker\n            itemStyle={pickerItemStyle}\n            disabled={disabled}\n            pure={pure}\n            indicatorStyle={indicatorStyle}\n            prefixCls={pickerPrefixCls}\n            selectedValue={selectedValue[i]}\n            onValueChange={this.onValueChange.bind(this, i)}\n            {...col.props}\n          />\n        </div>\n      );\n    });\n    return (\n      <div {...rootNativeProps} className={classnames(className, prefixCls)}>\n        {colElements}\n      </div>\n    );\n  },\n});\n\nexport default MultiPicker;\n\n\n\n// WEBPACK FOOTER //\n// ./src/MultiPicker.tsx","export default {\n  getDefaultProps() {\n    return {\n      prefixCls: 'rmc-multi-picker',\n      pickerPrefixCls: 'rmc-picker',\n      onValueChange() {\n      },\n      disabled: false,\n    };\n  },\n\n  getValue() {\n    const { children, selectedValue } = this.props;\n    if (selectedValue && selectedValue.length) {\n      return selectedValue;\n    } else {\n      if (!children) {\n        return [];\n      }\n      return children.map(c => {\n        const cc = c.props.children;\n        return cc && cc[0] && cc[0].value;\n      });\n    }\n  },\n\n  onValueChange(i, v) {\n    const value = this.getValue().concat();\n    value[i] = v;\n    this.props.onValueChange(value, i);\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/MultiPickerMixin.tsx"],"sourceRoot":""}