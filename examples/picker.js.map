{"version":3,"sources":["webpack:///./examples/picker.tsx","webpack:///./src/Picker.tsx?5f37","webpack:///./src/PickerMixin.tsx?6fb3"],"names":[],"mappings":"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","file":"examples/picker.js","sourcesContent":["/* tslint:disable:no-console */\n\nimport 'rmc-picker/assets/index.less';\nimport Picker from '../src/Picker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nlet count = 0;\nconst len = 10;\n\nclass PickerDemo extends React.Component<any, any> {\n  state = {\n    disabled: false,\n    items: this.getItems(count),\n    value: `${count + len / 2}`,\n  };\n\n  onChange = (value) => {\n    console.log('onChange', value);\n    this.setState({\n      value,\n    });\n  }\n\n  onScrollChange = (value) => {\n    console.log('onScrollChange', value);\n  }\n\n  disable = () => {\n    this.setState({\n      disabled: !this.state.disabled,\n    });\n  }\n\n  getItems(start) {\n    const items: any[] = [];\n    for (let i = start; i < start + len; i++) {\n      items.push(<Picker.Item value={i + ''} key={i}>\n        {count} {i}\n      </Picker.Item>);\n    }\n    return items;\n  }\n\n  rerender = () => {\n    count += len;\n    const items = this.getItems(count);\n    this.setState({\n      items,\n      value: String(count),\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ background: '#f5f5f9', padding: 10 }}>\n        <button onClick={this.rerender}>rerender</button>\n        &nbsp;\n        <button onClick={this.disable}>{this.state.disabled ? 'enable' : 'disable'}</button>\n        <Picker\n          selectedValue={this.state.value}\n          disabled={this.state.disabled}\n          onValueChange={this.onChange}\n          onScrollChange={this.onScrollChange}\n        >\n          {this.state.items}\n        </Picker>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<PickerDemo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/picker.tsx","import React from 'react';\nimport classNames from 'classnames';\nimport { IPickerProps } from './PickerTypes';\nimport PickerMixin from './PickerMixin';\n\ntype IPickerProp = {\n  select: Function;\n  doScrollingComplete: Function;\n  coumputeChildIndex: Function;\n};\n\nclass Picker extends React.Component<IPickerProp & IPickerProps, any> {\n  static defaultProps = {\n    prefixCls: 'rmc-picker',\n  };\n\n  rootRef: any;\n  maskRef: any;\n  contentRef: any;\n  indicatorRef: any;\n  itemHeight: number;\n  scrollValue: any;\n\n  scrollHanders = (() => {\n    let scrollY = 0;\n    let lastY = 0;\n    let startY = 0;\n    let scrollDisabled = false;\n    let isMoving = false;\n\n    const setTransform = (nodeStyle: CSSStyleDeclaration, value: any) => {\n      nodeStyle.transform = value;\n      nodeStyle.webkitTransform = value;\n    };\n\n    const setTransition = (nodeStyle: CSSStyleDeclaration, value: any) => {\n      nodeStyle.transition = value;\n      nodeStyle.webkitTransition = value;\n    };\n\n    const scrollTo = (x, y, time = .3) => {\n      if (scrollY !== y) {\n        scrollY = y;\n        if (time && !this.props.noAnimate) {\n          setTransition(this.contentRef.style, `cubic-bezier(0,0,0.2,1.15) ${time}s`);\n        }\n        setTransform(this.contentRef.style, `translate3d(0,${-y}px,0)`);\n        setTimeout(() => {\n          this.scrollingComplete();\n          if (this.contentRef) {\n            setTransition(this.contentRef.style, '');\n          }\n        }, +time * 1000);\n      }\n    };\n\n    const Velocity = ((minInterval = 30, maxInterval = 100) => {\n      let _time = 0;\n      let _y = 0;\n      let _velocity = 0;\n      const recorder = {\n        record: (y) => {\n          const now = +new Date();\n          _velocity = (y - _y) / (now - _time);\n          if (now - _time >= minInterval) {\n            _velocity = now - _time <= maxInterval ? _velocity : 0;\n            _y = y;\n            _time = now;\n          }\n        },\n        getVelocity: (y) => {\n          if (y !== _y) {\n            recorder.record(y);\n          }\n          return _velocity;\n        },\n      };\n      return recorder;\n    })();\n\n    const onFinish = () => {\n      isMoving = false;\n      let targetY = scrollY;\n\n      const height = ((this.props.children as any).length - 1) * this.itemHeight;\n\n      let time = .3;\n\n      const velocity = Velocity.getVelocity(targetY) * 4;\n      if (velocity) {\n        targetY = velocity * 40 + targetY;\n        time = Math.abs(velocity) * .1;\n      }\n\n      if (targetY % this.itemHeight !== 0) {\n        targetY = Math.round(targetY / this.itemHeight) * this.itemHeight;\n      }\n\n      if (targetY < 0) {\n        targetY = 0;\n      } else if (targetY > height) {\n        targetY = height;\n      }\n\n      scrollTo(0, targetY, time < .3 ? .3 : time);\n      this.onScrollChange();\n    };\n\n    const onStart = (y: number) => {\n      if (scrollDisabled) {\n        return;\n      }\n\n      isMoving = true;\n      startY = y;\n      lastY = scrollY;\n    };\n\n    const onMove = (y: number) => {\n      if (scrollDisabled || !isMoving) {\n        return;\n      }\n\n      scrollY = lastY - y + startY;\n      Velocity.record(scrollY);\n\n      this.onScrollChange();\n      setTransform(this.contentRef.style, `translate3d(0,${-scrollY}px,0)`);\n    };\n\n    return {\n      touchstart: (evt: React.TouchEvent<HTMLDivElement>) => onStart(evt.touches[0].screenY),\n      mousedown: (evt: React.MouseEvent<HTMLDivElement>) => onStart(evt.screenY),\n      touchmove: (evt: React.TouchEvent<HTMLDivElement>) => {\n        evt.preventDefault();\n        onMove(evt.touches[0].screenY);\n      },\n      mousemove: (evt: React.MouseEvent<HTMLDivElement>) => {\n        evt.preventDefault();\n        onMove(evt.screenY);\n      },\n      touchend: () => onFinish(),\n      touchcancel: () => onFinish(),\n      mouseup: () => onFinish(),\n      getValue: () => {\n        return scrollY;\n      },\n      scrollTo,\n      setDisabled: (disabled: boolean = false) => {\n        scrollDisabled = disabled;\n      },\n    };\n  })();\n\n  constructor(props) {\n    super(props);\n\n    let selectedValueState;\n    const { selectedValue, defaultSelectedValue } = this.props;\n    if (selectedValue !== undefined) {\n      selectedValueState = selectedValue;\n    } else if (defaultSelectedValue !== undefined) {\n      selectedValueState = defaultSelectedValue;\n    } else {\n      const children: any = React.Children.toArray(this.props.children);\n      selectedValueState = children && children[0] && children[0].props.value;\n    }\n    this.state = {\n      selectedValue: selectedValueState,\n    };\n  }\n\n  componentDidMount() {\n    const { contentRef, indicatorRef, maskRef, rootRef } = this;\n    const rootHeight = rootRef.getBoundingClientRect().height;\n    // https://github.com/react-component/m-picker/issues/18\n    const itemHeight = this.itemHeight = indicatorRef.getBoundingClientRect().height;\n    let num = Math.floor(rootHeight / itemHeight);\n    if (num % 2 === 0) {\n      num--;\n    }\n    num--;\n    num /= 2;\n    contentRef.style.padding = `${itemHeight * num}px 0`;\n    indicatorRef.style.top = `${itemHeight * num}px`;\n    maskRef.style.backgroundSize = `100% ${itemHeight * num}px`;\n    this.scrollHanders.setDisabled(this.props.disabled);\n    this.props.select(this.state.selectedValue, this.itemHeight, this.scrollTo);\n\n    const passiveSupported = this.passiveSupported();\n    const willPreventDefault = passiveSupported ? { passive: false } : false;\n    const willNotPreventDefault = passiveSupported ? { passive: true } : false;\n    Object.keys(this.scrollHanders).forEach(key => {\n      if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {\n        const pd = key.indexOf('move') >= 0 ? willPreventDefault : willNotPreventDefault;\n        (rootRef as HTMLDivElement).addEventListener(key, this.scrollHanders[key], pd as any);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    Object.keys(this.scrollHanders).forEach(key => {\n      if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {\n        (this.rootRef as HTMLDivElement).removeEventListener(key, this.scrollHanders[key]);\n      }\n    });\n  }\n\n  passiveSupported() {\n    let passiveSupported = false;\n\n    try {\n      const options = Object.defineProperty({}, 'passive', {\n        get: () => {\n          passiveSupported = true;\n        },\n      });\n      window.addEventListener('test', null as any, options);\n    } catch (err) { }\n    return passiveSupported;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('selectedValue' in nextProps) {\n      this.setState({\n        selectedValue: nextProps.selectedValue,\n      });\n    }\n    this.scrollHanders.setDisabled(nextProps.disabled);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.selectedValue !== nextState.selectedValue\n      || this.props.children !== nextProps.children;\n  }\n\n  componentDidUpdate() {\n    this.props.select(this.state.selectedValue, this.itemHeight, this.scrollTo);\n  }\n\n  scrollTo = (top) => {\n    this.scrollHanders.scrollTo(0, top);\n  }\n\n  fireValueChange = (selectedValue) => {\n    if (selectedValue !== this.state.selectedValue) {\n      if (!('selectedValue' in this.props)) {\n        this.setState({\n          selectedValue,\n        });\n      }\n      if (this.props.onValueChange) {\n        this.props.onValueChange(selectedValue);\n      }\n    }\n  }\n\n  onScrollChange = () => {\n    const top = this.scrollHanders.getValue();\n    if (top >= 0) {\n      const children = React.Children.toArray(this.props.children);\n      const index = this.props.coumputeChildIndex(top, this.itemHeight, children.length);\n      if (this.scrollValue !== index) {\n        this.scrollValue = index;\n        const child: any = children[index];\n        if (child && this.props.onScrollChange) {\n          this.props.onScrollChange(child.props.value);\n        } else if (console.warn) {\n          console.warn('child not found', children, index);\n        }\n      }\n    }\n  }\n\n  scrollingComplete = () => {\n    const top = this.scrollHanders.getValue();\n    if (top >= 0) {\n      this.props.doScrollingComplete(top, this.itemHeight, this.fireValueChange);\n    }\n  }\n\n  getValue() {\n    if ('selectedValue' in this.props) {\n      return this.props.selectedValue;\n    }\n    const children: any = React.Children.toArray(this.props.children);\n    return children && children[0] && children[0].props.value;\n  }\n\n  render() {\n    const { props } = this;\n    const {\n      prefixCls,\n      itemStyle,\n      indicatorStyle,\n      indicatorClassName = '',\n      children,\n    } = props;\n    const { selectedValue } = this.state;\n    const itemClassName = `${prefixCls}-item`;\n    const selectedItemClassName = `${itemClassName} ${prefixCls}-item-selected`;\n    const map = (item: any) => {\n      const { className = '', style, value } = item.props;\n      return (\n        <div\n          style={{ ...itemStyle, ...style }}\n          className={`${selectedValue === value ? selectedItemClassName : itemClassName} ${className}`}\n          key={value}\n        >\n          {item.children || item.props.children}\n        </div>\n      );\n    };\n    // compatibility for preact\n    const items = React.Children ? React.Children.map(children, map) : ([] as any[]).concat(children).map(map);\n\n    const pickerCls = {\n      [props.className as string]: !!props.className,\n      [prefixCls as string]: true,\n    };\n    return (\n      <div className={classNames(pickerCls)} ref={el => this.rootRef = el} style={this.props.style}>\n        <div className={`${prefixCls}-mask`} ref={el => this.maskRef = el} />\n        <div\n          className={`${prefixCls}-indicator ${indicatorClassName}`}\n          ref={el => this.indicatorRef = el}\n          style={indicatorStyle}\n        />\n        <div className={`${prefixCls}-content`} ref={el => this.contentRef = el}>\n          {items}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PickerMixin(Picker);\n\n\n\n// WEBPACK FOOTER //\n// ./src/Picker.tsx","/* tslint:disable:no-console */\nimport React from 'react';\nimport { IPickerProps } from './PickerTypes';\n\ntype IItemProps = {\n  className?: string;\n  value: any;\n};\n\nconst Item = (_props: IItemProps) => null;\n\nexport default function(ComposedComponent) {\n  return class extends React.Component<IPickerProps, any> {\n    static Item = Item;\n\n    select = (value, itemHeight, scrollTo) => {\n      const children: any = React.Children.toArray(this.props.children);\n      for (let i = 0, len = children.length; i < len; i++) {\n        if (children[i].props.value === value) {\n          this.selectByIndex(i, itemHeight, scrollTo);\n          return;\n        }\n      }\n      this.selectByIndex(0, itemHeight, scrollTo);\n    }\n\n    selectByIndex(index, itemHeight, zscrollTo) {\n      if (index < 0 || index >= React.Children.count(this.props.children) || !itemHeight) {\n        return;\n      }\n      zscrollTo(index * itemHeight);\n    }\n\n    coumputeChildIndex(top, itemHeight, childrenLength) {\n      let index = top / itemHeight;\n      const floor = Math.floor(index);\n      if (index - floor > 0.5) {\n        index = floor + 1;\n      } else {\n        index = floor;\n      }\n      return Math.min(index, childrenLength - 1);\n    }\n\n    doScrollingComplete = (top, itemHeight, fireValueChange) => {\n      const children = React.Children.toArray(this.props.children);\n      const index = this.coumputeChildIndex(top, itemHeight, children.length);\n      const child: any = children[index];\n      if (child) {\n        fireValueChange(child.props.value);\n      } else if (console.warn) {\n        console.warn('child not found', children, index);\n      }\n    }\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          doScrollingComplete={this.doScrollingComplete}\n          coumputeChildIndex={this.coumputeChildIndex}\n          select={this.select}\n        />\n      );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/PickerMixin.tsx"],"sourceRoot":""}